{
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "modules": true
    }
  },
  "plugins": [
    "react"
  ],
  //  // 环境定义了预定义的全局变量。
  //  "env": {
  //    //环境定义了预定义的全局变量。更多在官网查看
  //    "browser": true,
  //    "node": true,
  //    "commonjs": true,
  //    "amd": true,
  //    "es6":true,
  //    "mocha":true
  //  },
  //  // JavaScript 语言选项
  //  "parserOptions": {
  //    // ECMAScript 版本
  //    "ecmaVersion": 6,
  //    //    "sourceType": "script",//module
  //    // 想使用的额外的语言特性:
  //    "ecmaFeatures": {
  //      // 允许在全局作用域下使用 return 语句
  //      "globalReturn":true,
  //      // impliedStric
  //      "impliedStrict":true,
  //      // 启用 JSX
  //      "jsx":true
  //    }
  //  },
  /**
     *  "off" 或 0 - 关闭规则
     *  "warn" 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出),
     *  "error" 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)
     */
  "rules": {
    "comma-dangle": 0,
    "quotes": 0,
    "no-undef": 0,
    "no-unused-vars": 0,

    /**==============react规则验证==============*/
    "react/default-props-match-prop-types": 2, // 有默认值的属性必须在propTypes中指定
    "react/no-children-prop": 2, // 禁止使用children作为prop
    "react/no-direct-mutation-state": 2, // 禁止直接this.state = 方式修改state 必须使用setState
    "react/no-multi-comp": 2, // 一个文件只能存在一个组件
    "react/no-unescaped-entities": 2, // 禁止'<', '>'等单标签
    "react/no-unknown-property": 2, // 禁止未知的DOM属性
    "react/no-unused-prop-types": 2, // 禁止未使用的prop参数
    "react/prefer-es6-class": 2, // 强制使用es6 extend方法创建组件
    "react/require-default-props": 2, // 非require的propTypes必须制定默认值
    "react/self-closing-comp": 2, // 没有children的组件和html必须使用自闭和标签
    "react/sort-comp": 2, // 对组件的方法排序
    "react/style-prop-object": 2, // 组件参数如果是style，value必须是object
    "react/jsx-boolean-value": 2, // 属性值为true的时候，省略值只写属性名
    "react/jsx-closing-bracket-location": 2, // 强制闭合标签的位置
    "react/jsx-closing-tag-location": 2, // 强制开始标签闭合标签位置
    "react/jsx-equals-spacing": 2, // 属性赋值不允许有空格
    "react/jsx-first-prop-new-line": 2, // 只有一个属性情况下单行
    "react/jsx-key": 2, // 强制遍历出来的jsx加key
    "react/jsx-no-comment-textnodes": 2, // 检查jsx注释
    "react/jsx-no-duplicate-props": 2, // 检查属性名重名
    "react/jsx-no-undef": 2, // 检查jsx引用规范
    "react/jsx-pascal-case": 2, // 检查jsx标签名规范

//    "react/no-array-index-key": 2, // 遍历出来的节点不能使用index作为key  很多情况并无id
//    "react/no-set-state": 2, // 不必要的组件改写成无状态组件 ？？？
//    "react/no-string-refs": 2, // 禁止字符串的ref 系统大量使用
//    "react/require-default-props": 2, // 非require的propTypes必须制定默认值
//    "react/sort-prop-types": 2, // 对prop排序
//    "react/jsx-handler-names": 2, // 强制事件名称
//    "react/jsx-indent": [2, "tab"], // 强制js缩进
//    "react/jsx-indent-props": [2, "tab"], // 强制属性使用tab缩进
//    "react/jsx-max-props-per-line": [2, { "maximum": 2 }], // 每行最多几个属性
//    "react/jsx-no-target-blank": 2, // 检查jsx是否被引入和使用

    //==============这些规则与 JavaScript 代码中可能的错误或逻辑错误有关
//    "no-debugger":2,//禁用 debugger
    "no-cond-assign":2,//禁止条件表达式中出现赋值操作符
    "no-console":0,//禁用 console
    "no-constant-condition":2,//禁止在条件中使用常量表达式
    "no-dupe-args":2,//禁止 function定义中出现重名参数
    "no-dupe-keys":2,//禁止对象字面量中出现重复的 key
    "no-duplicate-case":2,//禁止出现重复的 case 标签
    "no-empty":2,//禁止出现空语句块
    "no-empty-character-class":2,//禁止在正则表达式中使用空字符集
    "no-ex-assign":2,//禁止对 catch 子句的参数重新赋值
    "no-extra-semi":2,//禁止不必要的分号
    "no-func-assign":2,//禁止对 function 声明重新赋值
    "no-inner-declarations":2,//禁止在嵌套的块中出现变量声明或 function 声明
    "no-invalid-regexp":2,//禁止 RegExp 构造函数中存在无效的正则表达式字符串
    "no-obj-calls":2,//禁止把全局对象作为函数调用
    "no-sparse-arrays":2,//禁用稀疏数组
    "no-template-curly-in-string":2,// 禁止在双引号中使用模板占位语法
    "no-unreachable":2,//禁止在return、throw、continue 和 break 语句之后出现不可达代码
    "use-isnan":2,//要求使用 isNaN() 检查 NaN


    //==============这些规则是关于最佳实践的，帮助你避免一些问题:
//    "consistent-return":2,//要求 return 语句要么总是指定返回的值，要么不指定 （特定函数使用）
    "default-case":2,//要求 switch 语句中有 default 分支
//    "no-alert":2,//禁用 alert、confirm 和 prompt
//    "no-case-declarations":2,//不允许在 case 子句中使用词法声明
//    "no-else-return":2,//禁止 if 语句中 return 语句之后有 else 块
//    "no-empty-function":2,//禁止出现空函数
//
    "no-empty-pattern":2,//禁止使用空解构模式
    "no-eq-null":2,//禁止在没有类型检查操作符的情况下与 null 进行比较
    "no-fallthrough":2,//禁止 case 语句落空
    "no-floating-decimal":2,//禁止数字字面量中使用前导和末尾小数点
    "no-loop-func":2,//禁止在循环中出现 function 声明和表达式
//    "no-multi-spaces":2,//禁止使用多个空格
//
//    "no-param-reassign":2,//禁止对 function 的参数进行重新赋值
    "no-redeclare":2,//禁止多次声明同一变量
    "no-return-assign":2,//禁止在 return 语句中使用赋值语句
    "no-self-assign":2,//禁止自我赋值
//
    "no-self-compare":2,//禁止自身比较
//    "no-unused-expressions":2,//禁止出现未使用过的表达式
    "no-void":2,//禁用 void 操作符
    "no-with":2,//禁用 with 语句
    "require-await":2,//禁止没有await操作的函数声明为async函数
    "wrap-iife":2,//要求 IIFE （立即执行函数）使用括号括起来


    //============这些规则与变量声明有关：
    "no-catch-shadow":2,// 禁止 catch 子句的参数与外层作用域中的变量同名无法
    "no-delete-var":2,//禁止删除变量
    "no-label-var":2,//不允许标签与变量同名
//    "no-shadow":2,//禁止变量声明与外层作用域的变量同名
    "no-shadow-restricted-names":2,//禁止将标识符定义为受限的名字
//    "no-undef":2,//禁用未声明的变量，除非它们在 /*global */ 注释中被提到
//    "no-undefined":2,//禁止将 undefined 作为标识符 存在很多初始值赋值为undefined 暂时关闭了
//    "no-unused-vars":2,//禁止出现未使用过的变量
//    "no-use-before-define":2,//禁止在变量定义之前使用它们 存在很多先调用 后定义的情况

    //==========这些规则是关于风格指南的，而且是非常主观的：
//    "camelcase":2,//强制使用骆驼拼写法命名约定
    "max-nested-callbacks":[2,{ "max": 4 }],//强制回调函数最大嵌套深度


    //===========这些规则只与 ES6 有关, 即通常所说的 ES2015：
    "constructor-super":2,// 要求在构造函数中有 super() 的调用
    "no-this-before-super":2,//禁止在构造函数中，在调用 super() 之前使用 this 或 super
    "require-yield":2 //要求 generator 函数内有 yield
  }
}




